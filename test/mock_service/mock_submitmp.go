// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/submitmp.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSubmitmpService is a mock of SubmitmpService interface.
type MockSubmitmpService struct {
	ctrl     *gomock.Controller
	recorder *MockSubmitmpServiceMockRecorder
}

// MockSubmitmpServiceMockRecorder is the mock recorder for MockSubmitmpService.
type MockSubmitmpServiceMockRecorder struct {
	mock *MockSubmitmpService
}

// NewMockSubmitmpService creates a new mock instance.
func NewMockSubmitmpService(ctrl *gomock.Controller) *MockSubmitmpService {
	mock := &MockSubmitmpService{ctrl: ctrl}
	mock.recorder = &MockSubmitmpServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubmitmpService) EXPECT() *MockSubmitmpServiceMockRecorder {
	return m.recorder
}

// SubmitMp mocks base method.
func (m *MockSubmitmpService) SubmitMp(citizenID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitMp", citizenID)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubmitMp indicates an expected call of SubmitMp.
func (mr *MockSubmitmpServiceMockRecorder) SubmitMp(citizenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitMp", reflect.TypeOf((*MockSubmitmpService)(nil).SubmitMp), citizenID)
}
